//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Dieser Quellcode wurde automatisch generiert von wsdl, Version=4.0.30319.17929.
// 
namespace ZRDG {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="services_ZRDGDataSoap", Namespace="http://dls.dg.be/ZRDGData/")]
    public partial class services_ZRDGData : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
      public string ServiceURL = "http://dls.dg.be/";

    private ZRDGData_Zugangserlaubnis zRDGData_ZugangserlaubnisValueField;

    private System.Threading.SendOrPostCallback ZRDGChronikenOperationCompleted;

    private System.Threading.SendOrPostCallback ZRDGChronikenYearsOperationCompleted;

    private System.Threading.SendOrPostCallback ZRDGZeitstrahlEpochenOperationCompleted;

    private System.Threading.SendOrPostCallback ZRDGZeitstrahlEpocheEreignisseOperationCompleted;

    /// <remarks/>
    public services_ZRDGData()
    {
      this.Url = ServiceURL+ "services/ZRDGData.asmx";
    }

    public ZRDGData_Zugangserlaubnis ZRDGData_ZugangserlaubnisValue
    {
      get
      {
        return this.zRDGData_ZugangserlaubnisValueField;
      }
      set
      {
        this.zRDGData_ZugangserlaubnisValueField = value;
      }
    }

    /// <remarks/>
    public event ZRDGChronikenCompletedEventHandler ZRDGChronikenCompleted;

    /// <remarks/>
    public event ZRDGChronikenYearsCompletedEventHandler ZRDGChronikenYearsCompleted;

    /// <remarks/>
    public event ZRDGZeitstrahlEpochenCompletedEventHandler ZRDGZeitstrahlEpochenCompleted;

    /// <remarks/>
    public event ZRDGZeitstrahlEpocheEreignisseCompletedEventHandler ZRDGZeitstrahlEpocheEreignisseCompleted;

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("ZRDGData_ZugangserlaubnisValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dls.dg.be/ZRDGData/ZRDGChroniken", RequestNamespace = "http://dls.dg.be/ZRDGData/", ResponseNamespace = "http://dls.dg.be/ZRDGData/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet ZRDGChroniken(string MandantURL, string InDatum, string Filter, string LangCode)
    {
      object[] results = this.Invoke("ZRDGChroniken", new object[] {
                        MandantURL,
                        InDatum,
                        Filter,
                        LangCode});
      return ((System.Data.DataSet)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginZRDGChroniken(string MandantURL, string InDatum, string Filter, string LangCode, System.AsyncCallback callback, object asyncState)
    {
      return this.BeginInvoke("ZRDGChroniken", new object[] {
                        MandantURL,
                        InDatum,
                        Filter,
                        LangCode}, callback, asyncState);
    }

    /// <remarks/>
    public System.Data.DataSet EndZRDGChroniken(System.IAsyncResult asyncResult)
    {
      object[] results = this.EndInvoke(asyncResult);
      return ((System.Data.DataSet)(results[0]));
    }

    /// <remarks/>
    public void ZRDGChronikenAsync(string MandantURL, string InDatum, string Filter, string LangCode)
    {
      this.ZRDGChronikenAsync(MandantURL, InDatum, Filter, LangCode, null);
    }

    /// <remarks/>
    public void ZRDGChronikenAsync(string MandantURL, string InDatum, string Filter, string LangCode, object userState)
    {
      if ((this.ZRDGChronikenOperationCompleted == null))
      {
        this.ZRDGChronikenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnZRDGChronikenOperationCompleted);
      }
      this.InvokeAsync("ZRDGChroniken", new object[] {
                        MandantURL,
                        InDatum,
                        Filter,
                        LangCode}, this.ZRDGChronikenOperationCompleted, userState);
    }

    private void OnZRDGChronikenOperationCompleted(object arg)
    {
      if ((this.ZRDGChronikenCompleted != null))
      {
        System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
        this.ZRDGChronikenCompleted(this, new ZRDGChronikenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
      }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("ZRDGData_ZugangserlaubnisValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dls.dg.be/ZRDGData/ZRDGChronikenYears", RequestNamespace = "http://dls.dg.be/ZRDGData/", ResponseNamespace = "http://dls.dg.be/ZRDGData/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet ZRDGChronikenYears(string MandantURL, string Filter, string LangCode)
    {
      object[] results = this.Invoke("ZRDGChronikenYears", new object[] {
                        MandantURL,
                        Filter,
                        LangCode});
      return ((System.Data.DataSet)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginZRDGChronikenYears(string MandantURL, string Filter, string LangCode, System.AsyncCallback callback, object asyncState)
    {
      return this.BeginInvoke("ZRDGChronikenYears", new object[] {
                        MandantURL,
                        Filter,
                        LangCode}, callback, asyncState);
    }

    /// <remarks/>
    public System.Data.DataSet EndZRDGChronikenYears(System.IAsyncResult asyncResult)
    {
      object[] results = this.EndInvoke(asyncResult);
      return ((System.Data.DataSet)(results[0]));
    }

    /// <remarks/>
    public void ZRDGChronikenYearsAsync(string MandantURL, string Filter, string LangCode)
    {
      this.ZRDGChronikenYearsAsync(MandantURL, Filter, LangCode, null);
    }

    /// <remarks/>
    public void ZRDGChronikenYearsAsync(string MandantURL, string Filter, string LangCode, object userState)
    {
      if ((this.ZRDGChronikenYearsOperationCompleted == null))
      {
        this.ZRDGChronikenYearsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnZRDGChronikenYearsOperationCompleted);
      }
      this.InvokeAsync("ZRDGChronikenYears", new object[] {
                        MandantURL,
                        Filter,
                        LangCode}, this.ZRDGChronikenYearsOperationCompleted, userState);
    }

    private void OnZRDGChronikenYearsOperationCompleted(object arg)
    {
      if ((this.ZRDGChronikenYearsCompleted != null))
      {
        System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
        this.ZRDGChronikenYearsCompleted(this, new ZRDGChronikenYearsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
      }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("ZRDGData_ZugangserlaubnisValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dls.dg.be/ZRDGData/ZRDGZeitstrahlEpochen", RequestNamespace = "http://dls.dg.be/ZRDGData/", ResponseNamespace = "http://dls.dg.be/ZRDGData/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet ZRDGZeitstrahlEpochen(string MandantURL, string Filter, string LangCode)
    {
      object[] results = this.Invoke("ZRDGZeitstrahlEpochen", new object[] {
                        MandantURL,
                        Filter,
                        LangCode});
      return ((System.Data.DataSet)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginZRDGZeitstrahlEpochen(string MandantURL, string Filter, string LangCode, System.AsyncCallback callback, object asyncState)
    {
      return this.BeginInvoke("ZRDGZeitstrahlEpochen", new object[] {
                        MandantURL,
                        Filter,
                        LangCode}, callback, asyncState);
    }

    /// <remarks/>
    public System.Data.DataSet EndZRDGZeitstrahlEpochen(System.IAsyncResult asyncResult)
    {
      object[] results = this.EndInvoke(asyncResult);
      return ((System.Data.DataSet)(results[0]));
    }

    /// <remarks/>
    public void ZRDGZeitstrahlEpochenAsync(string MandantURL, string Filter, string LangCode)
    {
      this.ZRDGZeitstrahlEpochenAsync(MandantURL, Filter, LangCode, null);
    }

    /// <remarks/>
    public void ZRDGZeitstrahlEpochenAsync(string MandantURL, string Filter, string LangCode, object userState)
    {
      if ((this.ZRDGZeitstrahlEpochenOperationCompleted == null))
      {
        this.ZRDGZeitstrahlEpochenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnZRDGZeitstrahlEpochenOperationCompleted);
      }
      this.InvokeAsync("ZRDGZeitstrahlEpochen", new object[] {
                        MandantURL,
                        Filter,
                        LangCode}, this.ZRDGZeitstrahlEpochenOperationCompleted, userState);
    }

    private void OnZRDGZeitstrahlEpochenOperationCompleted(object arg)
    {
      if ((this.ZRDGZeitstrahlEpochenCompleted != null))
      {
        System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
        this.ZRDGZeitstrahlEpochenCompleted(this, new ZRDGZeitstrahlEpochenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
      }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("ZRDGData_ZugangserlaubnisValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dls.dg.be/ZRDGData/ZRDGZeitstrahlEpocheEreignisse", RequestNamespace = "http://dls.dg.be/ZRDGData/", ResponseNamespace = "http://dls.dg.be/ZRDGData/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet ZRDGZeitstrahlEpocheEreignisse(string MandantURL, string EpocheID, string Filter, string LangCode)
    {
      object[] results = this.Invoke("ZRDGZeitstrahlEpocheEreignisse", new object[] {
                        MandantURL,
                        EpocheID,
                        Filter,
                        LangCode});
      return ((System.Data.DataSet)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginZRDGZeitstrahlEpocheEreignisse(string MandantURL, string EpocheID, string Filter, string LangCode, System.AsyncCallback callback, object asyncState)
    {
      return this.BeginInvoke("ZRDGZeitstrahlEpocheEreignisse", new object[] {
                        MandantURL,
                        EpocheID,
                        Filter,
                        LangCode}, callback, asyncState);
    }

    /// <remarks/>
    public System.Data.DataSet EndZRDGZeitstrahlEpocheEreignisse(System.IAsyncResult asyncResult)
    {
      object[] results = this.EndInvoke(asyncResult);
      return ((System.Data.DataSet)(results[0]));
    }

    /// <remarks/>
    public void ZRDGZeitstrahlEpocheEreignisseAsync(string MandantURL, string EpocheID, string Filter, string LangCode)
    {
      this.ZRDGZeitstrahlEpocheEreignisseAsync(MandantURL, EpocheID, Filter, LangCode, null);
    }

    /// <remarks/>
    public void ZRDGZeitstrahlEpocheEreignisseAsync(string MandantURL, string EpocheID, string Filter, string LangCode, object userState)
    {
      if ((this.ZRDGZeitstrahlEpocheEreignisseOperationCompleted == null))
      {
        this.ZRDGZeitstrahlEpocheEreignisseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnZRDGZeitstrahlEpocheEreignisseOperationCompleted);
      }
      this.InvokeAsync("ZRDGZeitstrahlEpocheEreignisse", new object[] {
                        MandantURL,
                        EpocheID,
                        Filter,
                        LangCode}, this.ZRDGZeitstrahlEpocheEreignisseOperationCompleted, userState);
    }

    private void OnZRDGZeitstrahlEpocheEreignisseOperationCompleted(object arg)
    {
      if ((this.ZRDGZeitstrahlEpocheEreignisseCompleted != null))
      {
        System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
        this.ZRDGZeitstrahlEpocheEreignisseCompleted(this, new ZRDGZeitstrahlEpocheEreignisseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
      }
    }

    /// <remarks/>
    public new void CancelAsync(object userState)
    {
      base.CancelAsync(userState);
    }
  }

  /// <remarks/>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
  [System.SerializableAttribute()]
  [System.Diagnostics.DebuggerStepThroughAttribute()]
  [System.ComponentModel.DesignerCategoryAttribute("code")]
  [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://dls.dg.be/ZRDGData/")]
  [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://dls.dg.be/ZRDGData/", IsNullable = false)]
  public partial class ZRDGData_Zugangserlaubnis : System.Web.Services.Protocols.SoapHeader
  {

    private string usernameField;

    private string passwortField;

    private System.Xml.XmlAttribute[] anyAttrField;

    /// <remarks/>
    public string username
    {
      get
      {
        return this.usernameField;
      }
      set
      {
        this.usernameField = value;
      }
    }

    /// <remarks/>
    public string passwort
    {
      get
      {
        return this.passwortField;
      }
      set
      {
        this.passwortField = value;
      }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlAnyAttributeAttribute()]
    public System.Xml.XmlAttribute[] AnyAttr
    {
      get
      {
        return this.anyAttrField;
      }
      set
      {
        this.anyAttrField = value;
      }
    }
  }

  /// <remarks/>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
  public delegate void ZRDGChronikenCompletedEventHandler(object sender, ZRDGChronikenCompletedEventArgs e);

  /// <remarks/>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
  [System.Diagnostics.DebuggerStepThroughAttribute()]
  [System.ComponentModel.DesignerCategoryAttribute("code")]
  public partial class ZRDGChronikenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
  {

    private object[] results;

    internal ZRDGChronikenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
      this.results = results;
    }

    /// <remarks/>
    public System.Data.DataSet Result
    {
      get
      {
        this.RaiseExceptionIfNecessary();
        return ((System.Data.DataSet)(this.results[0]));
      }
    }
  }

  /// <remarks/>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
  public delegate void ZRDGChronikenYearsCompletedEventHandler(object sender, ZRDGChronikenYearsCompletedEventArgs e);

  /// <remarks/>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
  [System.Diagnostics.DebuggerStepThroughAttribute()]
  [System.ComponentModel.DesignerCategoryAttribute("code")]
  public partial class ZRDGChronikenYearsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
  {

    private object[] results;

    internal ZRDGChronikenYearsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
      this.results = results;
    }

    /// <remarks/>
    public System.Data.DataSet Result
    {
      get
      {
        this.RaiseExceptionIfNecessary();
        return ((System.Data.DataSet)(this.results[0]));
      }
    }
  }

  /// <remarks/>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
  public delegate void ZRDGZeitstrahlEpochenCompletedEventHandler(object sender, ZRDGZeitstrahlEpochenCompletedEventArgs e);

  /// <remarks/>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
  [System.Diagnostics.DebuggerStepThroughAttribute()]
  [System.ComponentModel.DesignerCategoryAttribute("code")]
  public partial class ZRDGZeitstrahlEpochenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
  {

    private object[] results;

    internal ZRDGZeitstrahlEpochenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
      this.results = results;
    }

    /// <remarks/>
    public System.Data.DataSet Result
    {
      get
      {
        this.RaiseExceptionIfNecessary();
        return ((System.Data.DataSet)(this.results[0]));
      }
    }
  }

  /// <remarks/>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
  public delegate void ZRDGZeitstrahlEpocheEreignisseCompletedEventHandler(object sender, ZRDGZeitstrahlEpocheEreignisseCompletedEventArgs e);

  /// <remarks/>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
  [System.Diagnostics.DebuggerStepThroughAttribute()]
  [System.ComponentModel.DesignerCategoryAttribute("code")]
  public partial class ZRDGZeitstrahlEpocheEreignisseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
  {

    private object[] results;

    internal ZRDGZeitstrahlEpocheEreignisseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
      this.results = results;
    }

    /// <remarks/>
    public System.Data.DataSet Result
    {
      get
      {
        this.RaiseExceptionIfNecessary();
        return ((System.Data.DataSet)(this.results[0]));
      }
    }
  }
}
